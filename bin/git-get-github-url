#!/bin/bash
usage()
{
cat << EOF
usage: $0 options

This script will open the specified commit on github

OPTIONS:
	-h	Show this message
	-r	use the specified remote (default is origin)
	-f	load the specified file
	-p	Only print the url
	-d	Debug by printing the important variable info (this is automatically shown if no url is found)
	-q	Quiets all debugging and output messages. If the
EOF
}

DEFAULT_REMOTE="origin"
FILE=""
PRINT=0
DEBUG=0
QUIET=0

while getopts ":hr:pdqf:" OPTION
do
	case $OPTION in
		h)
			usage
			exit 1
			;;
		r)
			DEFAULT_REMOTE=$OPTARG
			;;
		f)
			FILE="$OPTARG"
			;;
		p)
			PRINT=1
			;;
		d)
			DEBUG=1
			;;
		q)
			QUIET=1
			;;
		?)
			usage
			exit
			;;
	esac
done
shift $(($OPTIND - 1))

remotes=$(git remote -v)
commit="$1"
mode="commit"

if [[ -z "$commit" ]]; then
	commit=$(git getm)
	mode="tree"
fi

if [[ $commit == "head" ]]; then
	commit="HEAD"
fi

if git show-ref --verify --quiet refs/heads/$commit; then
	mode="tree"
elif [[ ! $commit =~ ^[A-Za-z0-9-]+$ ]]; then
	mode="compare"
	commit=$(git get-custom-refspec $1)
fi

if [[ -n "$FILE" ]]; then
	if [[ -f "$FILE" ]]; then
		mode="blob"
	elif [[ -d "$FILE" ]]; then
		mode="tree"
	fi

	git_path="$(git rev-parse --show-toplevel)/"
	full_file_path=$(python -c "import os,sys; print os.path.realpath(sys.argv[1])" "$FILE")
	commit="$commit/${full_file_path:${#git_path}}"
fi

if [[ -n "$remotes" ]]; then
	github_url=$(echo "$remotes" | perl -lne "/github\.com/ && s#^$DEFAULT_REMOTE\s+(.+@)*([\w\d\.]+):(.*?)((?:\.git)?\s+\(.*)#https://github.com/\$3/$mode/$commit# && print && exit")
fi
# github_url=$(echo "$remotes" | perl -lne "s#^$DEFAULT_REMOTE.*\s.*(?:https://github\.com/|github\.com:|git://github\.com/)(.*)/(.*)(?:\.git).*\$#https://github.com/\$1/\$2/$mode/$commit# && print && exit")

ret_val=0

if [[ -n "$github_url" ]]; then
	if [[ $PRINT == 1 ]]; then
		echo $github_url
	else
		echo "Opening $github_url"
		open $github_url
	fi
else
	test ! $QUIET -eq 1 && echo "Could not get the URL for this repo. Debug info below"
	ret_val=1
fi


if [[ $QUIET != 1 && (-z "$github_url" || $DEBUG -eq 1) ]]; then
	echo ""
	echo "\$remotes:"
	echo "$remotes"
	echo ""
	echo "\$DEFAULT_REMOTE: $DEFAULT_REMOTE"
	echo "\$mode: $mode"
	echo "\$commit: $commit"
	[[ -z "$github_url" ]] && echo "\$github_url is empty"
	# [[ $DEBUG -eq 1 ]] && echo "The debug flag (-d) was passed"
fi

exit $ret_val

# echo $github_url

# (matches[0], matches[1], mode, target, new_git_path, file_name, lines)