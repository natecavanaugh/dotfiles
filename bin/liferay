#!/bin/sh

function notify {
	git ivy
	echo $1
	[[ `command -v terminal-notifier` ]] && terminal-notifier -message "$1" || osascript -e "display notification \"$1\""
}

dir_path="${1:-.}"
cmd="$2"
status=0

if [[ $dir_path != *"."* && $dir_path != *"/"* ]]; then
	cmd="$dir_path"
	dir_path=""
fi

if [[ -z $dir_path && -n "$NC_MASTER_PORTAL_PATH" ]]; then
	dir_path="$NC_MASTER_PORTAL_PATH"
else
	tmp_dir_path="$(git rev-parse --show-toplevel 2>/dev/null)"

	if [[ -n "$tmp_dir_path" ]]; then
		dir_path="$tmp_dir_path"
	fi
fi

if [[ -d "$dir_path" ]]; then
	cd $dir_path

	if [[ -n "$cmd" ]]; then
		if [[ "$cmd" == deploy* || "$cmd" == compile* ]]; then
			cd ./portal-impl
		fi

		if [[ -L "$dir_path/tools/sdk"  ]]; then
			rm -rf "$dir_path/tools/sdk"
		fi

		ant $cmd
		status=$?

		if [[ "$PWD" != "$dir_path" ]]; then
			cd $dir_path
		fi
	fi

	if [ $status = 0 ]; then
		# liferay dev

		if [[ -d "$dir_path/.ivy" ]]; then
			ivy=$(git ivy)

			if [[ "$ivy" == *"Removing .ivy/"* ]]; then
				echo "Ivy cleaned"
			fi
		fi

		if [[ -f "$dir_path/../startup.sh" ]]; then
			$dir_path/../startup.sh
		else
			user_props="app.server.$USER.properties"
			tomcat_path=""

			if [[ -d "../tomcat" ]]; then
				tomcat_path="../tomcat"
			elif [[ -f "$user_props" ]]; then
				tomcat_path=$(sed -n "s/^app\.server\.tomcat\.dir=\(.*\)/\1/ p" "$user_props")
			fi

			source_xuggler_jar="$dir_path/../xuggle-xuggler-arch-x86_64-xuggle-darwin11.jar"
			dest_xuggler_jar="$dir_path/portal-web/docroot/WEB-INF/lib/xuggle-xuggler-arch-x86_64-xuggle-darwin11.jar"

			if [[ -f "$source_xuggler_jar" ]]; then
				if [[ ! -f "$dest_xuggler_jar" ]]; then
					cp "$source_xuggler_jar" "$dest_xuggler_jar"
				fi
			fi

			source_xuggler_noarch_jar="$dir_path/../xuggle-xuggler-noarch.jar"
			dest_xuggler_noarch_jar="$dir_path/portal-web/docroot/WEB-INF/lib/xuggle-xuggler-noarch.jar"

			if [[ -f "$source_xuggler_noarch_jar" ]]; then
				if [[ ! -f "$dest_xuggler_noarch_jar" ]]; then
					cp "$source_xuggler_noarch_jar" "$dest_xuggler_noarch_jar"
				fi
			fi

			if [[ -n "$tomcat_path" && -d "$tomcat_path" ]]; then
				# port=$(perl -ne '/<Connector port="([^"]+)" protocol="(org\.apache\.coyote\.http11\.Http11NioProtocol|HTTP\/1\.1)"/ && print "$1" and exit;' "$tomcat_path/conf/server.xml")
				# echo "-- $port ---"
				# (sleep 30; $(open -g "http://localhost:${port:-8080}"))&

				$tomcat_path/bin/catalina.sh run
			else
				notify "Could not find an app server to start"
			fi
		fi
	else
		notify "Build failed"
	fi
else
	notify "$dir_path is not a directory"
fi